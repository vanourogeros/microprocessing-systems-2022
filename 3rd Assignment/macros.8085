INR16 MACRO ADDR:
	PUSH PSW
	PUSH H
	LHLD ADDR	;L<- X_LOW AND H<- X_HIGH
	INX H		;(HL)<- (HL)+1
	SHLD ADDR	;ADDR<- L AND ADDR+1 <- H
	POP H
	POP PSW
ENDM
	

FILL MACRO ADDR,K:
	PUSH PSW
	PUSH B
	PUSH H
	MOV A,K	;A <- NUMBER TO SAVE
	MVI B,01H	;B <- ASOS
	LHLD ADDR	;L<- ADDR AND H<- ADDR+1
	CPI 00H 	;IF K == 0 Z=1
	JZ ZEROK
LOOPY:
	MOV M,A	;SAVE A TO MEMORY
	INX H		;NEXT MEMORY POSITION
	DCR A
	CMP B 		;AMA A=B=01H Z=1
	JNZ LOOPY
	JZ CONT 
ZEROK:
	MOV A,00H
	MOV M,A
	INX H
	MVI A,FFH
LALOOPY:
	MOV M,A
	INX H
	DCR A
	CMP B 		;AMA A=B=01H Z=1
	JNZ LALOOPY
	JZ CONT
CONT: 
	POP H	
	POP B
	POP PSW
ENDM

RHLL MACRO Q,R:
	PUSH PSW
	PUSH H
	MOV L,R	;(HL) <- (QR)
	MOV H,Q
	MOV A,H
	RAL		;RRL ME CY
	MOV Q,A
	POP H
	POP PSW 
ENDM

